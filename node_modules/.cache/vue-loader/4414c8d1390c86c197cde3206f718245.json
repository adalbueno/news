{"remainingRequest":"/Users/adalbueno/Project/Personal/app/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/adalbueno/Project/Personal/app/app/src/components/news/news-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/adalbueno/Project/Personal/app/app/src/components/news/news-list.vue","mtime":1554985112672},{"path":"/Users/adalbueno/Project/Personal/app/app/node_modules/babel-loader/lib/index.js","mtime":1554126321076},{"path":"/Users/adalbueno/Project/Personal/app/app/node_modules/cache-loader/dist/cjs.js","mtime":1554126333510},{"path":"/Users/adalbueno/Project/Personal/app/app/node_modules/vue-loader/lib/index.js","mtime":1554126335226}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport config from '../../../app.config.js';\nimport Vue from 'vue';\n\nexport default {\n    props: {\n        list: Array\n    },\n    data() {\n        return {\n            config: config,\n            type: config.newsList.type,\n            selectedNews: null,\n            modalShownOnce: false\n        }\n    },\n    methods: {\n        goToLink(news) {\n            this.selectedNews = news;\n            this.markAsRead(news);\n\n            if (this.modalShownOnce) {\n                this.onModalOk();\n                return;\n            }\n\n            this.$refs.modal.show();\n        },\n        markAsRead(news) {\n            Vue.set(news, 'read', true);\n        },\n        setListType(type) {\n            this.type = type;\n        },\n        onModalOk() {\n            window.open(this.selectedNews.url, '_blank');\n            this.modalShownOnce = true;\n            this.selectedNews = null;\n        }\n    },\n    computed: {\n        cssClasses() {\n            return {\n                itemsList: `${this.type}-list`,\n                itemsListItem: `${this.type}-list__item`,\n                itemsListItemImage: `${this.type}-list__item__image`,\n                itemsListItemDetails: `${this.type}-list__item__details`,\n                itemsListItemTitle: `${this.type}-list__item__title`,\n                itemsListItemDescription: `${this.type}-list__item__description`,\n                itemsListItemSource: `${this.type}-list__item__source`\n            }\n        }\n    }\n}\n",{"version":3,"sources":["news-list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"news-list.vue","sourceRoot":"src/components/news","sourcesContent":["<template>\n    <div class=\"news-list\">\n        <div class=\"settings\" v-if=\"this.config.newsList.settings.visible\">\n            <button class=\"btn\" @click=\"setListType('items')\" :class=\"{active: type == 'items'}\">\n                <i class=\"fas fa-bars\" ></i>\n                List\n            </button>\n            <button class=\"btn\" @click=\"setListType('cards')\" :class=\"{active: type == 'cards'}\">\n                <i class=\"fas fa-th-large\"></i>\n                Grid\n            </button>\n        </div>\n        <ul :class=\"cssClasses.itemsList\">\n            <li v-for=\"(item, index) in list\"\n                :key=\"index\"\n                :class=\"[cssClasses.itemsListItem, {'read': item.read}]\"\n                @click=\"goToLink(item)\">\n                <app-image :class=\"cssClasses.itemsListItemImage\" :src=\"item.urlToImage\" />\n                <div :class=\"cssClasses.itemsListItemDetails\">\n                    <h2 :class=\"cssClasses.itemsListItemTitle\">{{ item.title }}</h2>\n                    <p :class=\"cssClasses.itemsListItemDescription\">{{ item.description }}</p>\n                    <p :class=\"cssClasses.itemsListItemSource\">{{ item.source.name }}</p>\n                </div>\n            </li>\n        </ul>\n        <app-modal :onOk=\"onModalOk\" ref=\"modal\" title=\"Link externo\" cancel=\"Cancelar\">\n            <template v-if=\"selectedNews\">\n                <p>O link para a notícia \"<strong>{{ selectedNews.title }}</strong>\" é para um site externo ({{ selectedNews.source.name }}) e todo seu conteúdo é de responsabilidade de nosso parceiro.</p>\n            </template>\n        </app-modal>\n    </div>\n</template>\n\n<script>\nimport config from '../../../app.config.js';\nimport Vue from 'vue';\n\nexport default {\n    props: {\n        list: Array\n    },\n    data() {\n        return {\n            config: config,\n            type: config.newsList.type,\n            selectedNews: null,\n            modalShownOnce: false\n        }\n    },\n    methods: {\n        goToLink(news) {\n            this.selectedNews = news;\n            this.markAsRead(news);\n\n            if (this.modalShownOnce) {\n                this.onModalOk();\n                return;\n            }\n\n            this.$refs.modal.show();\n        },\n        markAsRead(news) {\n            Vue.set(news, 'read', true);\n        },\n        setListType(type) {\n            this.type = type;\n        },\n        onModalOk() {\n            window.open(this.selectedNews.url, '_blank');\n            this.modalShownOnce = true;\n            this.selectedNews = null;\n        }\n    },\n    computed: {\n        cssClasses() {\n            return {\n                itemsList: `${this.type}-list`,\n                itemsListItem: `${this.type}-list__item`,\n                itemsListItemImage: `${this.type}-list__item__image`,\n                itemsListItemDetails: `${this.type}-list__item__details`,\n                itemsListItemTitle: `${this.type}-list__item__title`,\n                itemsListItemDescription: `${this.type}-list__item__description`,\n                itemsListItemSource: `${this.type}-list__item__source`\n            }\n        }\n    }\n}\n</script>\n"]}]}