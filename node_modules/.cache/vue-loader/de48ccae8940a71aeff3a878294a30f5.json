{"remainingRequest":"/Users/adalbueno/Project/Personal/app/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/adalbueno/Project/Personal/app/app/src/pages/News.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/adalbueno/Project/Personal/app/app/src/pages/News.vue","mtime":1554905635300},{"path":"/Users/adalbueno/Project/Personal/app/app/node_modules/cache-loader/dist/cjs.js","mtime":1554126333510},{"path":"/Users/adalbueno/Project/Personal/app/app/node_modules/babel-loader/lib/index.js","mtime":1554126321076},{"path":"/Users/adalbueno/Project/Personal/app/app/node_modules/cache-loader/dist/cjs.js","mtime":1554126333510},{"path":"/Users/adalbueno/Project/Personal/app/app/node_modules/vue-loader/lib/index.js","mtime":1554126335226}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\nimport config from '../../app.config.js';\nimport NewsService from '../services/newsService';\nvar newsService = new NewsService();\n\nexport default {\n    data: () => ({\n        list: [],\n        loading: false,\n        config: config\n    }),\n    methods: {\n        getNews() {\n            this.loading = true;\n\n            newsService.getEverything(this.config.news)\n                .then(this.populateNewsList)\n                .finally(() => this.loading = false)\n        },\n        populateNewsList(data) {\n            this.list = data;\n        }\n    },\n    mounted() {\n        this.getNews();\n    }\n}\n",{"version":3,"sources":["News.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"News.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n    <div class=\"news\">\n        <div class=\"panel\">\n            <app-news-list :list=\"list\" />\n        </div>\n    </div>\n</template>\n\n<script>\nimport config from '../../app.config.js';\nimport NewsService from '../services/newsService';\nvar newsService = new NewsService();\n\nexport default {\n    data: () => ({\n        list: [],\n        loading: false,\n        config: config\n    }),\n    methods: {\n        getNews() {\n            this.loading = true;\n\n            newsService.getEverything(this.config.news)\n                .then(this.populateNewsList)\n                .finally(() => this.loading = false)\n        },\n        populateNewsList(data) {\n            this.list = data;\n        }\n    },\n    mounted() {\n        this.getNews();\n    }\n}\n</script>\n"]}]}